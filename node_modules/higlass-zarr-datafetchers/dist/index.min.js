import{open as T,root as L,get as E,slice as I,FetchStore as R}from"zarrita";function A(w,h,g){let x=g?h[1]:h[0]*h[1],m=new Float32Array(x),u=0;if(g)for(let p of w){let a=p.data;m.set(a,u),u+=a.length}else{let p=h[0];for(let a=0;a<p;a++)for(let f of w){let z=f.data.subarray(a*f.stride[0],(a+1)*f.stride[0]);m.set(z,u),u+=z.length}}return m}var M=function(h,...g){if(!new.target)throw new Error('Uncaught TypeError: Class constructor cannot be invoked without "new"');let{slugid:x}=h.libraries,{absToChr:m,parseChromsizesRows:u,genomicRangeToChromosomeChunks:p,DenseDataExtrema1D:a,minNonZero:f,maxNonZero:z}=h.utils;class S{constructor(e){if(this.dataConfig=e,this.trackUid=x.nice(),e.url){let{url:r,options:t={}}=e;this.store=new R(r,t),this.storeRoot=Promise.resolve(L(this.store))}e.row!==void 0&&(this.row=e.row)}tilesetInfo(e){return this.tilesetInfoLoading=!0,this.storeRoot.then(r=>T(r)).then(r=>{let t=r.attrs;this.tilesetInfoLoading=!1;let d=t.multiscales.map(l=>[l.name,l.metadata.chromsize]),n=t.multiscales[t.multiscales.length-1],o=n.metadata.chromoffset+n.metadata.chromsize,s=t.shape[1],i={...t,shape:[t.shape[1],t.shape[0]],chromSizes:d,tile_size:s,max_width:o,min_pos:[0],max_pos:[o],max_zoom:Math.ceil(Math.log(o/s)/Math.log(2))};return e&&e(i),i}).catch(r=>{this.tilesetInfoLoading=!1,e&&e({error:`Error parsing zarr multivec: ${r}`})})}fetchTilesDebounced(e,r){let t={},d=[],n=[];for(let o of r){let s=o.split("."),i=parseInt(s[0],10),l=parseInt(s[1],10);if(Number.isNaN(l)||Number.isNaN(i)){console.warn("Invalid tile zoom or position:",i,l);continue}d.push(o),n.push(this.tile(i,l,o))}return Promise.all(n).then(o=>{for(let s=0;s<o.length;s++){let i=d[s];t[i]=o[s],t[i].tilePositionId=i}e(t)}),t}tile(e,r,t){let{storeRoot:d}=this;return this.tilesetInfo().then(n=>{let o=+n.resolutions[e],s=+n.tile_size,i=o,l=r*s*o,Z=l+s*o,P=n.chromSizes,y=u(P),[_,k]=m(l,y),[F,b]=m(Z,y),C=p(P,{chr:_,pos:k},{chr:F,pos:b},i,s);return Promise.all(C.map(([D,c,N])=>d.then(v=>T(v.resolve(`/chromosomes/${D}/${o}/`),{kind:"array"})).then(v=>this.row!==void 0?E(v,[this.row,I(c,N)]):E(v,[null,I(c,N)])))).then(D=>{let c=A(D,[n.shape[1],n.shape[0]],this.row!==void 0);return Promise.resolve({dense:c,denseDataExtrema:new a(c),dtype:"float32",min_value:Math.min.apply(null,c),max_value:Math.max.apply(null,c),minNonZero:f(c),maxNonZero:z(c),server:null,size:1,shape:n.shape,tileId:t,tilePos:[r],tilePositionId:t,tilesetUid:null,zoomLevel:e})})})}}return new S(...g)};M.config={type:"zarr-multivec"};var U=M;export{U as ZarrMultivecDataFetcher};
//# sourceMappingURL=index.min.js.map
