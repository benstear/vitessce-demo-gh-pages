/**
 * Supports three-level stratified input
 * (cell set, sample set, gene).
 * @param {*} stratifiedResult
 * @param {*} posThreshold
 * @returns
 */
export function dotStratifiedExpressionData(stratifiedResult: any, posThreshold: any): any;
/**
 * Supports two-level stratified input
 * (cell set, sample set).
 * @param {*} stratifiedResult
 * @param {*} keepZeros
 * @returns
 */
export function summarizeStratifiedExpressionData(stratifiedResult: any, keepZeros: any): any;
/**
 * Supports two-level summarized input
 * (cell set, sample set),
 * the output from summarizeStratifiedExpressionData.
 * @param {*} summarizedResult
 * @param {*} binCount
 * @param {*} yMinProp
 * @returns
 */
export function histogramStratifiedExpressionData(summarizedResult: any, binCount: any, yMinProp: any): {
    groupSummaries: {
        key: any;
        value: {
            key: any;
            value: any;
        }[];
    }[];
    groupData: {
        key: any;
        value: {
            key: any;
            value: any;
        }[];
    }[];
    groupBins: {
        key: any;
        value: {
            key: any;
            value: import("d3-array").Bin<number, number>[];
        }[];
    }[];
    groupBinsMax: number | undefined;
    y: any;
};
//# sourceMappingURL=expr-hooks.d.ts.map