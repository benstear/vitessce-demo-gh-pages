/**
 *
 * @param {string|undefined} arrPath
 * @returns
 */
export function getIndexPath(arrPath: string | undefined): string;
/**
 *
 * @param {string|undefined} arrPath
 * @returns
 */
export function getVarPath(arrPath: string | undefined): string;
/**
 *
 * @param {string|undefined} arrPath
 * @returns
 */
export function getParquetPath(arrPath: string | undefined): string;
/**
 *
 * @param {string|undefined} arrPath
 * @returns
 */
export function getAttrsPath(arrPath: string | undefined): string;
export default class SpatialDataShapesSource extends AnnDataSource {
    /** @type {{ [k: string]: Promise<string[]> }} */
    obsIndices: {
        [k: string]: Promise<string[]>;
    };
    /** @type {{ [k: string]: Promise<string[]> }} */
    varIndices: {
        [k: string]: Promise<string[]>;
    };
    /** @type {{ [k: string]: string[] }} */
    varAliases: {
        [k: string]: string[];
    };
    /**
     *
     * @param {string} tablePath
     * @returns
     */
    loadSpatialDataAttrs(tablePath: string): Promise<{
        [k: string]: string | string[] | null | undefined;
    }>;
    /**
     *
     * @param {string} path A path to within shapes.
     * @returns {Promise<"0.1"|"0.2">} The format version.
     */
    getFormatVersion(path: string): Promise<"0.1" | "0.2">;
    /**
     *
     * @param {string} path A path to an array within shapes.
     * @returns
     */
    loadParquetTable(path: string): Promise<import("apache-arrow").Table<any>>;
    parquetTable: import("apache-arrow").Table<any> | undefined;
    /**
     * Class method for loading the obs index.
     * @param {string|undefined} path
     * @param {string|undefined} tablePath
     * @returns {Promise<string[]>} An promise for a zarr array containing the indices.
     */
    loadObsIndex(path?: string | undefined, tablePath?: string | undefined): Promise<string[]>;
    /**
     * Class method for loading the var alias.
     * @param {string} varPath
     * @param {string} matrixPath
     * @returns {Promise<string[]>} An promise for a zarr array containing the aliased names.
     */
    loadVarAlias(varPath: string, matrixPath: string): Promise<string[]>;
}
import { AnnDataSource } from '@vitessce/zarr';
//# sourceMappingURL=SpatialDataShapesSource.d.ts.map