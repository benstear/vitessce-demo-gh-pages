export function SetsManagerTreeGlobalStyles(props: any): JSX.Element;
export function AntTooltipGlobalStyles(): JSX.Element;
export function HelpTooltipGlobalStyles(props: any): JSX.Element;
export function PopoverGlobalStyles(props: any): JSX.Element;
export const useStyles: (params: void, muiStyleOverridesParams?: {
    props: Record<string, unknown>;
    ownerState?: Record<string, unknown> | undefined;
} | undefined) => {
    classes: Record<"setsManager" | "setOperationButtons" | "setsManagerTree" | "plusButton" | "nodeMenuIcon" | "nodeSizeLabel" | "levelButtonsContainer" | "levelRadioButton" | "levelRadioButtonChecked" | "titleButton" | "titleButtonWithInput" | "titleInput" | "titleSaveButton", string>;
    theme: import("@mui/material").Theme;
    css: import("tss-react").Css;
    cx: import("tss-react").Cx;
};
export const useHelpTooltipStyles: (params: void, muiStyleOverridesParams?: {
    props: Record<string, unknown>;
    ownerState?: Record<string, unknown> | undefined;
} | undefined) => {
    classes: Record<never, string>;
    theme: import("@mui/material").Theme;
    css: import("tss-react").Css;
    cx: import("tss-react").Cx;
};
//# sourceMappingURL=styles.d.ts.map