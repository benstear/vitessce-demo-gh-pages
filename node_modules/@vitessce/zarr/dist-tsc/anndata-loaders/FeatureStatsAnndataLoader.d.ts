/** @import AnnDataSource from '../AnnDataSource.js' */
/** @import { FeatureStatsData } from '@vitessce/types' */
/**
 * Loader for string arrays located in anndata.zarr stores.
 * @template {AnnDataSource} DataSourceType
 * @extends {AbstractTwoStepLoader<DataSourceType>}
 */
export default class FeatureStatsAnndataLoader<DataSourceType extends AnnDataSource> extends AbstractTwoStepLoader<DataSourceType> {
    constructor(dataSource: DataSourceType, params: import("@vitessce/types").LoaderParams);
    /**
     * Class method for loading feature string labels.
     * @returns {Promise<any>} A promise for the array.
     */
    loadSignificances(dfPath: any): Promise<any>;
    /**
     * Class method for loading feature string labels.
     * @returns {Promise<any>} A promise for the array.
     */
    loadFoldChanges(dfPath: any): Promise<any>;
    loadFeatureNames(dfPath: any): Promise<string[]>;
    loadDataFrame(dfPath: any): Promise<{
        featureId: string[];
        featureFoldChange: any;
        featureSignificance: any;
    }>;
    /**
     *
     * @returns {Promise<StatsMeta[]>}
     */
    loadMetadata(): Promise<StatsMeta[]>;
    metadata: any;
    /**
     * Load data from multiple dataframes, merged.
     * @param {object} volcanoOptions
     * @param {string[]|null} [volcanoOptions.sampleFacet]
     * @param {string[]|null} [volcanoOptions.obsSetFacet]
     * @param {number|null} [volcanoOptions.topK]
     * @param {string[][]|null} [volcanoOptions.sampleSetSelection]
     * @returns {Promise<LoaderResult<FeatureStatsData>>}
     */
    loadMulti(volcanoOptions: {
        sampleFacet?: string[] | null | undefined;
        obsSetFacet?: string[] | null | undefined;
        topK?: number | null | undefined;
        sampleSetSelection?: string[][] | null | undefined;
    }): Promise<LoaderResult<FeatureStatsData>>;
    load(): Promise<void>;
}
import type AnnDataSource from '../AnnDataSource.js';
import { AbstractTwoStepLoader } from '@vitessce/abstract';
import { LoaderResult } from '@vitessce/abstract';
import type { FeatureStatsData } from '@vitessce/types';
//# sourceMappingURL=FeatureStatsAnndataLoader.d.ts.map