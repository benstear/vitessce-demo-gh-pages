import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { Accordion, AccordionDetails, AccordionSummary, Typography, ExpandMore as ExpandMoreIcon } from '@vitessce/styles';
import { useStyles } from './styles.js';
export function ConfirmatoryCart(props) {
    const { currentModalityAgnosticSelection, 
    // eslint-disable-next-line no-unused-vars
    setCurrentModalityAgnosticSelection, currentModalitySpecificSelection, 
    // eslint-disable-next-line no-unused-vars
    setCurrentModalitySpecificSelection, currentStratificationSelection, 
    // eslint-disable-next-line no-unused-vars
    setCurrentStratificationSelection, } = props;
    const { classes } = useStyles();
    const [expandedAccordions, setExpandedAccordions] = React.useState([
        'agnostic', 'specific', 'stratification',
    ]);
    const handleAccordionChange = panel => (event, isExpanded) => {
        if (isExpanded) {
            setExpandedAccordions([...expandedAccordions, panel]);
        }
        else {
            setExpandedAccordions(expandedAccordions.filter(item => item !== panel));
        }
    };
    return (_jsxs(_Fragment, { children: [_jsx(Typography, { children: "Current selections" }), _jsxs(Accordion, { className: classes.accordion, expanded: expandedAccordions.includes('agnostic'), onChange: handleAccordionChange('agnostic'), children: [_jsx(AccordionSummary, { expandIcon: _jsx(ExpandMoreIcon, {}), "aria-controls": "panel1bh-content", id: "panel1bh-header", children: _jsx(Typography, { children: "Modality-agnostic biomarkers" }) }), _jsx(AccordionDetails, { className: classes.accordionDetails, children: _jsx("ul", { className: classes.cartUl, children: currentModalityAgnosticSelection ? (currentModalityAgnosticSelection.map(item => (_jsxs("li", { children: [item.label, " (", item.nodeType, ")"] }, item.kgId)))) : null }) })] }), _jsxs(Accordion, { className: classes.accordion, expanded: expandedAccordions.includes('specific'), onChange: handleAccordionChange('specific'), children: [_jsx(AccordionSummary, { expandIcon: _jsx(ExpandMoreIcon, {}), "aria-controls": "panel2bh-content", id: "panel2bh-header", children: _jsx(Typography, { children: "Modality-specific signature" }) }), _jsx(AccordionDetails, { className: classes.accordionDetails, children: _jsx("ul", { className: classes.cartUl, children: currentModalitySpecificSelection ? (currentModalitySpecificSelection.map(item => (_jsxs("li", { children: [item.label, " (", item.nodeType, ")"] }, item.kgId)))) : null }) })] }), _jsxs(Accordion, { className: classes.accordion, expanded: expandedAccordions.includes('stratification'), onChange: handleAccordionChange('stratification'), children: [_jsx(AccordionSummary, { expandIcon: _jsx(ExpandMoreIcon, {}), "aria-controls": "panel3bh-content", id: "panel3bh-header", children: _jsx(Typography, { children: "Case-control stratification" }) }), _jsx(AccordionDetails, { className: classes.accordionDetails, children: _jsx("ul", { className: classes.cartUl, children: currentStratificationSelection ? (_jsx("li", { children: currentStratificationSelection.name })) : null }) })] })] }));
}
