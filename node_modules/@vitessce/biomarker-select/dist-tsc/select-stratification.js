import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Grid, RadioGroup, FormControl, FormLabel, Radio, FormControlLabel, Typography } from '@vitessce/styles';
export function SelectStratification(props) {
    const { stratifications, currentStratificationSelection: currentStratificationSelectionProp, setCurrentStratificationSelection: setCurrentStratificationSelectionProp, } = props;
    // Convert back and forth from the special value '__all__' to null.
    const currentStratificationSelection = currentStratificationSelectionProp === null
        ? '__all__'
        : currentStratificationSelectionProp.stratificationId;
    function setCurrentStratificationSelection(event, value) {
        setCurrentStratificationSelectionProp(stratifications.find(s => s.stratificationId === value) ?? null);
    }
    const sampleSetOptions = stratifications?.filter(s => s.stratificationType === 'sampleSet');
    const structuralRegionOptions = stratifications?.filter(s => s.stratificationType === 'structural-region');
    const hasSampleSetOptions = sampleSetOptions && sampleSetOptions.length > 0;
    const hasStructuralRegionOptions = structuralRegionOptions && structuralRegionOptions.length > 0;
    return (_jsxs(Grid, { size: 12, children: [_jsx(Typography, { variant: "h6", children: "Select a stratification option:" }), _jsx(FormControl, { children: _jsxs(RadioGroup, { "aria-labelledby": "demo-radio-buttons-group-label", value: currentStratificationSelection, onChange: setCurrentStratificationSelection, name: "radio-buttons-group", children: [_jsx(FormControlLabel, { value: "__all__", control: _jsx(Radio, {}), label: "No stratification" }), hasSampleSetOptions ? (_jsxs(_Fragment, { children: [_jsx(FormLabel, { children: "By participant group (clinical):" }), sampleSetOptions.map(s => (_jsx(FormControlLabel, { value: s.stratificationId, control: _jsx(Radio, {}), label: s.name }, s.name)))] })) : null, hasStructuralRegionOptions ? (_jsxs(_Fragment, { children: [_jsx(FormLabel, { children: "By segmentation-defined spatial region (structural):" }), structuralRegionOptions.map(s => (_jsx(FormControlLabel, { value: s.stratificationId, control: _jsx(Radio, {}), label: s.name }, s.name)))] })) : null] }) })] }));
}
