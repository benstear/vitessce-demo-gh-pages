const ViewType$2 = {
  DESCRIPTION: "description",
  STATUS: "status",
  SCATTERPLOT: "scatterplot",
  SPATIAL: "spatial",
  SPATIAL_BETA: "spatialBeta",
  HEATMAP: "heatmap",
  LAYER_CONTROLLER: "layerController",
  LAYER_CONTROLLER_BETA: "layerControllerBeta",
  GENOMIC_PROFILES: "genomicProfiles",
  GATING: "gating",
  FEATURE_LIST: "featureList",
  OBS_SETS: "obsSets",
  OBS_SET_SIZES: "obsSetSizes",
  OBS_SET_FEATURE_VALUE_DISTRIBUTION: "obsSetFeatureValueDistribution",
  FEATURE_VALUE_HISTOGRAM: "featureValueHistogram",
  DOT_PLOT: "dotPlot",
  FEATURE_BAR_PLOT: "featureBarPlot",
  VOLCANO_PLOT: "volcanoPlot",
  OBS_SET_COMPOSITION_BAR_PLOT: "obsSetCompositionBarPlot",
  FEATURE_SET_ENRICHMENT_BAR_PLOT: "featureSetEnrichmentBarPlot",
  BIOMARKER_SELECT: "biomarkerSelect",
  COMPARATIVE_HEADING: "comparativeHeading",
  LINK_CONTROLLER: "linkController",
  NEUROGLANCER: "neuroglancer",
  DUAL_SCATTERPLOT: "dualScatterplot",
  TREEMAP: "treemap",
  SAMPLE_SET_PAIR_MANAGER: "sampleSetPairManager",
  FEATURE_STATS_TABLE: "featureStatsTable"
};
const DataType$2 = {
  OBS_LABELS: "obsLabels",
  OBS_EMBEDDING: "obsEmbedding",
  OBS_FEATURE_MATRIX: "obsFeatureMatrix",
  OBS_SETS: "obsSets",
  FEATURE_LABELS: "featureLabels",
  IMAGE: "image",
  OBS_SEGMENTATIONS: "obsSegmentations",
  NEIGHBORHOODS: "neighborhoods",
  GENOMIC_PROFILES: "genomic-profiles",
  OBS_SPOTS: "obsSpots",
  OBS_POINTS: "obsPoints",
  OBS_LOCATIONS: "obsLocations",
  SAMPLE_SETS: "sampleSets",
  SAMPLE_EDGES: "sampleEdges",
  COMPARISON_METADATA: "comparisonMetadata",
  FEATURE_STATS: "featureStats",
  FEATURE_SET_STATS: "featureSetStats",
  OBS_SET_STATS: "obsSetStats"
};
const FileType$2 = {
  // Joint file types
  ANNDATA_ZARR: "anndata.zarr",
  ANNDATA_ZARR_ZIP: "anndata.zarr.zip",
  ANNDATA_H5AD: "anndata.h5ad",
  SPATIALDATA_ZARR: "spatialdata.zarr",
  // Atomic file types
  OBS_EMBEDDING_CSV: "obsEmbedding.csv",
  OBS_SPOTS_CSV: "obsSpots.csv",
  OBS_POINTS_CSV: "obsPoints.csv",
  OBS_LOCATIONS_CSV: "obsLocations.csv",
  OBS_LABELS_CSV: "obsLabels.csv",
  FEATURE_LABELS_CSV: "featureLabels.csv",
  OBS_FEATURE_MATRIX_CSV: "obsFeatureMatrix.csv",
  OBS_SEGMENTATIONS_JSON: "obsSegmentations.json",
  OBS_SETS_CSV: "obsSets.csv",
  OBS_SETS_JSON: "obsSets.json",
  SAMPLE_SETS_CSV: "sampleSets.csv",
  // OME-Zarr
  IMAGE_OME_ZARR: "image.ome-zarr",
  OBS_SEGMENTATIONS_OME_ZARR: "obsSegmentations.ome-zarr",
  // OME-Zarr - Zipped
  IMAGE_OME_ZARR_ZIP: "image.ome-zarr.zip",
  OBS_SEGMENTATIONS_OME_ZARR_ZIP: "obsSegmentations.ome-zarr.zip",
  // AnnData
  OBS_FEATURE_MATRIX_ANNDATA_ZARR: "obsFeatureMatrix.anndata.zarr",
  OBS_FEATURE_COLUMNS_ANNDATA_ZARR: "obsFeatureColumns.anndata.zarr",
  OBS_SETS_ANNDATA_ZARR: "obsSets.anndata.zarr",
  OBS_EMBEDDING_ANNDATA_ZARR: "obsEmbedding.anndata.zarr",
  OBS_SPOTS_ANNDATA_ZARR: "obsSpots.anndata.zarr",
  OBS_POINTS_ANNDATA_ZARR: "obsPoints.anndata.zarr",
  OBS_LOCATIONS_ANNDATA_ZARR: "obsLocations.anndata.zarr",
  OBS_SEGMENTATIONS_ANNDATA_ZARR: "obsSegmentations.anndata.zarr",
  OBS_LABELS_ANNDATA_ZARR: "obsLabels.anndata.zarr",
  FEATURE_LABELS_ANNDATA_ZARR: "featureLabels.anndata.zarr",
  SAMPLE_EDGES_ANNDATA_ZARR: "sampleEdges.anndata.zarr",
  SAMPLE_SETS_ANNDATA_ZARR: "sampleSets.anndata.zarr",
  COMPARISON_METADATA_ANNDATA_ZARR: "comparisonMetadata.anndata.zarr",
  COMPARATIVE_FEATURE_STATS_ANNDATA_ZARR: "comparativeFeatureStats.anndata.zarr",
  COMPARATIVE_FEATURE_SET_STATS_ANNDATA_ZARR: "comparativeFeatureSetStats.anndata.zarr",
  COMPARATIVE_OBS_SET_STATS_ANNDATA_ZARR: "comparativeObsSetStats.anndata.zarr",
  // AnnData - zipped
  OBS_FEATURE_MATRIX_ANNDATA_ZARR_ZIP: "obsFeatureMatrix.anndata.zarr.zip",
  OBS_FEATURE_COLUMNS_ANNDATA_ZARR_ZIP: "obsFeatureColumns.anndata.zarr.zip",
  OBS_SETS_ANNDATA_ZARR_ZIP: "obsSets.anndata.zarr.zip",
  OBS_EMBEDDING_ANNDATA_ZARR_ZIP: "obsEmbedding.anndata.zarr.zip",
  OBS_SPOTS_ANNDATA_ZARR_ZIP: "obsSpots.anndata.zarr.zip",
  OBS_POINTS_ANNDATA_ZARR_ZIP: "obsPoints.anndata.zarr.zip",
  OBS_LOCATIONS_ANNDATA_ZARR_ZIP: "obsLocations.anndata.zarr.zip",
  OBS_SEGMENTATIONS_ANNDATA_ZARR_ZIP: "obsSegmentations.anndata.zarr.zip",
  OBS_LABELS_ANNDATA_ZARR_ZIP: "obsLabels.anndata.zarr.zip",
  FEATURE_LABELS_ANNDATA_ZARR_ZIP: "featureLabels.anndata.zarr.zip",
  SAMPLE_EDGES_ANNDATA_ZARR_ZIP: "sampleEdges.anndata.zarr.zip",
  SAMPLE_SETS_ANNDATA_ZARR_ZIP: "sampleSets.anndata.zarr.zip",
  COMPARISON_METADATA_ANNDATA_ZARR_ZIP: "comparisonMetadata.anndata.zarr.zip",
  COMPARATIVE_FEATURE_STATS_ANNDATA_ZARR_ZIP: "comparativeFeatureStats.anndata.zarr.zip",
  COMPARATIVE_FEATURE_SET_STATS_ANNDATA_ZARR_ZIP: "comparativeFeatureSetStats.anndata.zarr.zip",
  COMPARATIVE_OBS_SET_STATS_ANNDATA_ZARR_ZIP: "comparativeObsSetStats.anndata.zarr.zip",
  // AnnData - h5ad via reference spec
  OBS_FEATURE_MATRIX_ANNDATA_H5AD: "obsFeatureMatrix.anndata.h5ad",
  OBS_FEATURE_COLUMNS_ANNDATA_H5AD: "obsFeatureColumns.anndata.h5ad",
  OBS_SETS_ANNDATA_H5AD: "obsSets.anndata.h5ad",
  OBS_EMBEDDING_ANNDATA_H5AD: "obsEmbedding.anndata.h5ad",
  OBS_SPOTS_ANNDATA_H5AD: "obsSpots.anndata.h5ad",
  OBS_POINTS_ANNDATA_H5AD: "obsPoints.anndata.h5ad",
  OBS_LOCATIONS_ANNDATA_H5AD: "obsLocations.anndata.h5ad",
  OBS_SEGMENTATIONS_ANNDATA_H5AD: "obsSegmentations.anndata.h5ad",
  OBS_LABELS_ANNDATA_H5AD: "obsLabels.anndata.h5ad",
  FEATURE_LABELS_ANNDATA_H5AD: "featureLabels.anndata.h5ad",
  SAMPLE_EDGES_ANNDATA_H5AD: "sampleEdges.anndata.h5ad",
  SAMPLE_SETS_ANNDATA_H5AD: "sampleSets.anndata.h5ad",
  COMPARISON_METADATA_ANNDATA_H5AD: "comparisonMetadata.anndata.h5ad",
  COMPARATIVE_FEATURE_STATS_ANNDATA_H5AD: "comparativeFeatureStats.anndata.h5ad",
  COMPARATIVE_FEATURE_SET_STATS_ANNDATA_H5AD: "comparativeFeatureSetStats.anndata.h5ad",
  COMPARATIVE_OBS_SET_STATS_ANNDATA_H5AD: "comparativeObsSetStats.anndata.h5ad",
  // SpatialData
  IMAGE_SPATIALDATA_ZARR: "image.spatialdata.zarr",
  LABELS_SPATIALDATA_ZARR: "labels.spatialdata.zarr",
  SHAPES_SPATIALDATA_ZARR: "shapes.spatialdata.zarr",
  OBS_FEATURE_MATRIX_SPATIALDATA_ZARR: "obsFeatureMatrix.spatialdata.zarr",
  OBS_SETS_SPATIALDATA_ZARR: "obsSets.spatialdata.zarr",
  OBS_SPOTS_SPATIALDATA_ZARR: "obsSpots.spatialdata.zarr",
  FEATURE_LABELS_SPATIALDATA_ZARR: "featureLabels.spatialdata.zarr",
  // TODO:
  // OBS_POINTS_SPATIALDATA_ZARR: 'obsPoints.spatialdata.zarr',
  // OBS_LOCATIONS_SPATIALDATA_ZARR: 'obsLocations.spatialdata.zarr',
  // MuData
  OBS_FEATURE_MATRIX_MUDATA_ZARR: "obsFeatureMatrix.mudata.zarr",
  OBS_SETS_MUDATA_ZARR: "obsSets.mudata.zarr",
  OBS_EMBEDDING_MUDATA_ZARR: "obsEmbedding.mudata.zarr",
  OBS_SPOTS_MUDATA_ZARR: "obsSpots.mudata.zarr",
  OBS_POINTS_MUDATA_ZARR: "obsPoints.mudata.zarr",
  OBS_LOCATIONS_MUDATA_ZARR: "obsLocations.mudata.zarr",
  OBS_SEGMENTATIONS_MUDATA_ZARR: "obsSegmentations.mudata.zarr",
  OBS_LABELS_MUDATA_ZARR: "obsLabels.mudata.zarr",
  FEATURE_LABELS_MUDATA_ZARR: "featureLabels.mudata.zarr",
  GENOMIC_PROFILES_ZARR: "genomic-profiles.zarr",
  NEIGHBORHOODS_JSON: "neighborhoods.json",
  // OME-TIFF
  IMAGE_OME_TIFF: "image.ome-tiff",
  OBS_SEGMENTATIONS_OME_TIFF: "obsSegmentations.ome-tiff",
  // GLB
  OBS_SEGMENTATIONS_GLB: "obsSegmentations.glb",
  // New file types to support old file types:
  // - cells.json
  OBS_EMBEDDING_CELLS_JSON: "obsEmbedding.cells.json",
  OBS_SEGMENTATIONS_CELLS_JSON: "obsSegmentations.cells.json",
  OBS_LOCATIONS_CELLS_JSON: "obsLocations.cells.json",
  OBS_LABELS_CELLS_JSON: "obsLabels.cells.json",
  // - cell-sets.json
  OBS_SETS_CELL_SETS_JSON: "obsSets.cell-sets.json",
  // - genes.json
  OBS_FEATURE_MATRIX_GENES_JSON: "obsFeatureMatrix.genes.json",
  // - clusters.json
  OBS_FEATURE_MATRIX_CLUSTERS_JSON: "obsFeatureMatrix.clusters.json",
  // - expression-matrix.zarr
  OBS_FEATURE_MATRIX_EXPRESSION_MATRIX_ZARR: "obsFeatureMatrix.expression-matrix.zarr",
  // - raster.json
  IMAGE_RASTER_JSON: "image.raster.json",
  OBS_SEGMENTATIONS_RASTER_JSON: "obsSegmentations.raster.json",
  // - molecules.json
  OBS_LOCATIONS_MOLECULES_JSON: "obsLocations.molecules.json",
  OBS_LABELS_MOLECULES_JSON: "obsLabels.molecules.json",
  // Legacy joint file types
  CELLS_JSON: "cells.json",
  CELL_SETS_JSON: "cell-sets.json",
  ANNDATA_CELL_SETS_ZARR: "anndata-cell-sets.zarr",
  ANNDATA_CELLS_ZARR: "anndata-cells.zarr",
  EXPRESSION_MATRIX_ZARR: "expression-matrix.zarr",
  MOLECULES_JSON: "molecules.json",
  RASTER_JSON: "raster.json",
  RASTER_OME_ZARR: "raster.ome-zarr",
  CLUSTERS_JSON: "clusters.json",
  GENES_JSON: "genes.json",
  ANNDATA_EXPRESSION_MATRIX_ZARR: "anndata-expression-matrix.zarr"
};
const CoordinationType$2 = {
  META_COORDINATION_SCOPES: "metaCoordinationScopes",
  META_COORDINATION_SCOPES_BY: "metaCoordinationScopesBy",
  DATASET: "dataset",
  // Entity types
  OBS_TYPE: "obsType",
  FEATURE_TYPE: "featureType",
  FEATURE_VALUE_TYPE: "featureValueType",
  OBS_LABELS_TYPE: "obsLabelsType",
  FEATURE_LABELS_TYPE: "featureLabelsType",
  // Other types
  EMBEDDING_TYPE: "embeddingType",
  EMBEDDING_ZOOM: "embeddingZoom",
  EMBEDDING_ROTATION: "embeddingRotation",
  EMBEDDING_TARGET_X: "embeddingTargetX",
  EMBEDDING_TARGET_Y: "embeddingTargetY",
  EMBEDDING_TARGET_Z: "embeddingTargetZ",
  EMBEDDING_OBS_SET_POLYGONS_VISIBLE: "embeddingObsSetPolygonsVisible",
  EMBEDDING_OBS_SET_LABELS_VISIBLE: "embeddingObsSetLabelsVisible",
  EMBEDDING_OBS_SET_LABEL_SIZE: "embeddingObsSetLabelSize",
  EMBEDDING_OBS_RADIUS: "embeddingObsRadius",
  EMBEDDING_OBS_RADIUS_MODE: "embeddingObsRadiusMode",
  EMBEDDING_OBS_OPACITY: "embeddingObsOpacity",
  EMBEDDING_OBS_OPACITY_MODE: "embeddingObsOpacityMode",
  SPATIAL_ZOOM: "spatialZoom",
  SPATIAL_ROTATION: "spatialRotation",
  SPATIAL_TARGET_X: "spatialTargetX",
  SPATIAL_TARGET_Y: "spatialTargetY",
  SPATIAL_TARGET_Z: "spatialTargetZ",
  SPATIAL_TARGET_T: "spatialTargetT",
  SPATIAL_ROTATION_X: "spatialRotationX",
  SPATIAL_ROTATION_Y: "spatialRotationY",
  SPATIAL_ROTATION_Z: "spatialRotationZ",
  SPATIAL_ROTATION_ORBIT: "spatialRotationOrbit",
  SPATIAL_ORBIT_AXIS: "spatialOrbitAxis",
  SPATIAL_AXIS_FIXED: "spatialAxisFixed",
  HEATMAP_ZOOM_X: "heatmapZoomX",
  HEATMAP_ZOOM_Y: "heatmapZoomY",
  HEATMAP_TARGET_X: "heatmapTargetX",
  HEATMAP_TARGET_Y: "heatmapTargetY",
  OBS_HIGHLIGHT: "obsHighlight",
  OBS_SELECTION: "obsSelection",
  OBS_SET_SELECTION: "obsSetSelection",
  OBS_SELECTION_MODE: "obsSelectionMode",
  OBS_FILTER: "obsFilter",
  OBS_SET_FILTER: "obsSetFilter",
  OBS_FILTER_MODE: "obsFilterMode",
  OBS_SET_HIGHLIGHT: "obsSetHighlight",
  OBS_SET_EXPANSION: "obsSetExpansion",
  OBS_SET_COLOR: "obsSetColor",
  FEATURE_HIGHLIGHT: "featureHighlight",
  FEATURE_SELECTION: "featureSelection",
  FEATURE_SET_SELECTION: "featureSetSelection",
  FEATURE_SELECTION_MODE: "featureSelectionMode",
  FEATURE_FILTER: "featureFilter",
  FEATURE_SET_FILTER: "featureSetFilter",
  FEATURE_FILTER_MODE: "featureFilterMode",
  FEATURE_VALUE_COLORMAP: "featureValueColormap",
  FEATURE_VALUE_TRANSFORM: "featureValueTransform",
  FEATURE_VALUE_COLORMAP_RANGE: "featureValueColormapRange",
  FEATURE_AGGREGATION_STRATEGY: "featureAggregationStrategy",
  OBS_COLOR_ENCODING: "obsColorEncoding",
  SPATIAL_IMAGE_LAYER: "spatialImageLayer",
  SPATIAL_SEGMENTATION_LAYER: "spatialSegmentationLayer",
  SPATIAL_POINT_LAYER: "spatialPointLayer",
  SPATIAL_NEIGHBORHOOD_LAYER: "spatialNeighborhoodLayer",
  GENOMIC_ZOOM_X: "genomicZoomX",
  GENOMIC_ZOOM_Y: "genomicZoomY",
  GENOMIC_TARGET_X: "genomicTargetX",
  GENOMIC_TARGET_Y: "genomicTargetY",
  ADDITIONAL_OBS_SETS: "additionalObsSets",
  // TODO: use obsHighlight rather than moleculeHighlight.
  MOLECULE_HIGHLIGHT: "moleculeHighlight",
  GATING_FEATURE_SELECTION_X: "gatingFeatureSelectionX",
  GATING_FEATURE_SELECTION_Y: "gatingFeatureSelectionY",
  FEATURE_VALUE_TRANSFORM_COEFFICIENT: "featureValueTransformCoefficient",
  FEATURE_VALUE_POSITIVITY_THRESHOLD: "featureValuePositivityThreshold",
  TOOLTIPS_VISIBLE: "tooltipsVisible",
  FILE_UID: "fileUid",
  IMAGE_LAYER: "imageLayer",
  IMAGE_CHANNEL: "imageChannel",
  SEGMENTATION_LAYER: "segmentationLayer",
  SEGMENTATION_CHANNEL: "segmentationChannel",
  SPATIAL_TARGET_C: "spatialTargetC",
  SPATIAL_LAYER_VISIBLE: "spatialLayerVisible",
  SPATIAL_LAYER_OPACITY: "spatialLayerOpacity",
  SPATIAL_LAYER_COLORMAP: "spatialLayerColormap",
  SPATIAL_LAYER_TRANSPARENT_COLOR: "spatialLayerTransparentColor",
  SPATIAL_LAYER_MODEL_MATRIX: "spatialLayerModelMatrix",
  SPATIAL_SEGMENTATION_FILLED: "spatialSegmentationFilled",
  SPATIAL_SEGMENTATION_STROKE_WIDTH: "spatialSegmentationStrokeWidth",
  SPATIAL_CHANNEL_COLOR: "spatialChannelColor",
  SPATIAL_CHANNEL_VISIBLE: "spatialChannelVisible",
  SPATIAL_CHANNEL_OPACITY: "spatialChannelOpacity",
  SPATIAL_CHANNEL_WINDOW: "spatialChannelWindow",
  PHOTOMETRIC_INTERPRETATION: "photometricInterpretation",
  // For 3D volume rendering
  SPATIAL_RENDERING_MODE: "spatialRenderingMode",
  // For whole spatial view
  VOLUMETRIC_RENDERING_ALGORITHM: "volumetricRenderingAlgorithm",
  // Could be per-image-layer
  SPATIAL_TARGET_RESOLUTION: "spatialTargetResolution",
  // Per-spatial-layer
  // For clipping plane sliders
  SPATIAL_SLICE_X: "spatialSliceX",
  SPATIAL_SLICE_Y: "spatialSliceY",
  SPATIAL_SLICE_Z: "spatialSliceZ",
  // For spatial spot and point layers
  SPOT_LAYER: "spotLayer",
  POINT_LAYER: "pointLayer",
  SPATIAL_SPOT_RADIUS: "spatialSpotRadius",
  // In micrometers?
  SPATIAL_SPOT_FILLED: "spatialSpotFilled",
  SPATIAL_SPOT_STROKE_WIDTH: "spatialSpotStrokeWidth",
  SPATIAL_LAYER_COLOR: "spatialLayerColor",
  PIXEL_HIGHLIGHT: "pixelHighlight",
  // Per-image-layer
  TOOLTIP_CROSSHAIRS_VISIBLE: "tooltipCrosshairsVisible",
  LEGEND_VISIBLE: "legendVisible",
  SPATIAL_CHANNEL_LABELS_VISIBLE: "spatialChannelLabelsVisible",
  SPATIAL_CHANNEL_LABELS_ORIENTATION: "spatialChannelLabelsOrientation",
  SPATIAL_CHANNEL_LABEL_SIZE: "spatialChannelLabelSize",
  // Multi-sample / comparative
  SAMPLE_TYPE: "sampleType",
  SAMPLE_SELECTION: "sampleSelection",
  SAMPLE_SET_SELECTION: "sampleSetSelection",
  SAMPLE_SELECTION_MODE: "sampleSelectionMode",
  SAMPLE_FILTER: "sampleFilter",
  SAMPLE_SET_FILTER: "sampleSetFilter",
  SAMPLE_FILTER_MODE: "sampleFilterMode",
  SAMPLE_SET_COLOR: "sampleSetColor",
  SAMPLE_HIGHLIGHT: "sampleHighlight",
  EMBEDDING_POINTS_VISIBLE: "embeddingPointsVisible",
  EMBEDDING_CONTOURS_VISIBLE: "embeddingContoursVisible",
  EMBEDDING_CONTOURS_FILLED: "embeddingContoursFilled",
  EMBEDDING_CONTOUR_PERCENTILES: "embeddingContourPercentiles",
  CONTOUR_COLOR_ENCODING: "contourColorEncoding",
  CONTOUR_COLOR: "contourColor",
  // For volcano plot:
  FEATURE_POINT_SIGNIFICANCE_THRESHOLD: "featurePointSignificanceThreshold",
  FEATURE_LABEL_SIGNIFICANCE_THRESHOLD: "featureLabelSignificanceThreshold",
  FEATURE_POINT_FOLD_CHANGE_THRESHOLD: "featurePointFoldChangeThreshold",
  FEATURE_LABEL_FOLD_CHANGE_THRESHOLD: "featureLabelFoldChangeThreshold",
  // Treemap
  HIERARCHY_LEVELS: "hierarchyLevels"
};
({
  // For new file types
  [FileType$2.OBS_EMBEDDING_CSV]: DataType$2.OBS_EMBEDDING,
  [FileType$2.OBS_SPOTS_CSV]: DataType$2.OBS_SPOTS,
  [FileType$2.OBS_POINTS_CSV]: DataType$2.OBS_POINTS,
  [FileType$2.OBS_LOCATIONS_CSV]: DataType$2.OBS_LOCATIONS,
  [FileType$2.OBS_LABELS_CSV]: DataType$2.OBS_LABELS,
  [FileType$2.FEATURE_LABELS_CSV]: DataType$2.FEATURE_LABELS,
  [FileType$2.SAMPLE_SETS_CSV]: DataType$2.SAMPLE_SETS,
  [FileType$2.OBS_FEATURE_MATRIX_CSV]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_SEGMENTATIONS_JSON]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_SETS_CSV]: DataType$2.OBS_SETS,
  [FileType$2.OBS_SETS_JSON]: DataType$2.OBS_SETS,
  [FileType$2.IMAGE_OME_ZARR]: DataType$2.IMAGE,
  [FileType$2.OBS_SEGMENTATIONS_OME_ZARR]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_FEATURE_MATRIX_ANNDATA_ZARR]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_FEATURE_COLUMNS_ANNDATA_ZARR]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_SETS_ANNDATA_ZARR]: DataType$2.OBS_SETS,
  [FileType$2.OBS_EMBEDDING_ANNDATA_ZARR]: DataType$2.OBS_EMBEDDING,
  [FileType$2.OBS_SPOTS_ANNDATA_ZARR]: DataType$2.OBS_SPOTS,
  [FileType$2.OBS_POINTS_ANNDATA_ZARR]: DataType$2.OBS_POINTS,
  [FileType$2.OBS_LOCATIONS_ANNDATA_ZARR]: DataType$2.OBS_LOCATIONS,
  [FileType$2.OBS_SEGMENTATIONS_ANNDATA_ZARR]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_LABELS_ANNDATA_ZARR]: DataType$2.OBS_LABELS,
  [FileType$2.FEATURE_LABELS_ANNDATA_ZARR]: DataType$2.FEATURE_LABELS,
  [FileType$2.SAMPLE_EDGES_ANNDATA_ZARR]: DataType$2.SAMPLE_EDGES,
  [FileType$2.SAMPLE_SETS_ANNDATA_ZARR]: DataType$2.SAMPLE_SETS,
  [FileType$2.COMPARISON_METADATA_ANNDATA_ZARR]: DataType$2.COMPARISON_METADATA,
  [FileType$2.COMPARATIVE_FEATURE_STATS_ANNDATA_ZARR]: DataType$2.FEATURE_STATS,
  [FileType$2.COMPARATIVE_FEATURE_SET_STATS_ANNDATA_ZARR]: DataType$2.FEATURE_SET_STATS,
  [FileType$2.COMPARATIVE_OBS_SET_STATS_ANNDATA_ZARR]: DataType$2.OBS_SET_STATS,
  [FileType$2.IMAGE_OME_TIFF]: DataType$2.IMAGE,
  [FileType$2.OBS_SEGMENTATIONS_OME_TIFF]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_FEATURE_MATRIX_MUDATA_ZARR]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_SETS_MUDATA_ZARR]: DataType$2.OBS_SETS,
  [FileType$2.OBS_EMBEDDING_MUDATA_ZARR]: DataType$2.OBS_EMBEDDING,
  [FileType$2.OBS_SPOTS_MUDATA_ZARR]: DataType$2.OBS_SPOTS,
  [FileType$2.OBS_POINTS_MUDATA_ZARR]: DataType$2.OBS_POINTS,
  [FileType$2.OBS_LOCATIONS_MUDATA_ZARR]: DataType$2.OBS_LOCATIONS,
  [FileType$2.OBS_SEGMENTATIONS_MUDATA_ZARR]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_LABELS_MUDATA_ZARR]: DataType$2.OBS_LABELS,
  [FileType$2.FEATURE_LABELS_MUDATA_ZARR]: DataType$2.FEATURE_LABELS,
  [FileType$2.OBS_SEGMENTATIONS_GLB]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.IMAGE_SPATIALDATA_ZARR]: DataType$2.IMAGE,
  [FileType$2.LABELS_SPATIALDATA_ZARR]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.SHAPES_SPATIALDATA_ZARR]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_SPOTS_SPATIALDATA_ZARR]: DataType$2.OBS_SPOTS,
  [FileType$2.OBS_FEATURE_MATRIX_SPATIALDATA_ZARR]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_SETS_SPATIALDATA_ZARR]: DataType$2.OBS_SETS,
  [FileType$2.FEATURE_LABELS_SPATIALDATA_ZARR]: DataType$2.FEATURE_LABELS,
  // For new file types to support old file types
  [FileType$2.OBS_EMBEDDING_CELLS_JSON]: DataType$2.OBS_EMBEDDING,
  [FileType$2.OBS_LOCATIONS_CELLS_JSON]: DataType$2.OBS_LOCATIONS,
  [FileType$2.OBS_SEGMENTATIONS_CELLS_JSON]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_LABELS_CELLS_JSON]: DataType$2.OBS_LABELS,
  [FileType$2.OBS_SETS_CELL_SETS_JSON]: DataType$2.OBS_SETS,
  [FileType$2.OBS_FEATURE_MATRIX_GENES_JSON]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_FEATURE_MATRIX_CLUSTERS_JSON]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.OBS_FEATURE_MATRIX_EXPRESSION_MATRIX_ZARR]: DataType$2.OBS_FEATURE_MATRIX,
  [FileType$2.IMAGE_RASTER_JSON]: DataType$2.IMAGE,
  [FileType$2.OBS_SEGMENTATIONS_RASTER_JSON]: DataType$2.OBS_SEGMENTATIONS,
  [FileType$2.OBS_LOCATIONS_MOLECULES_JSON]: DataType$2.OBS_LOCATIONS,
  [FileType$2.OBS_LABELS_MOLECULES_JSON]: DataType$2.OBS_LABELS,
  // For old file types
  [FileType$2.GENOMIC_PROFILES_ZARR]: DataType$2.GENOMIC_PROFILES,
  [FileType$2.NEIGHBORHOODS_JSON]: DataType$2.NEIGHBORHOODS
});
({
  [DataType$2.OBS_SEGMENTATIONS]: [
    CoordinationType$2.FILE_UID,
    CoordinationType$2.OBS_TYPE
  ],
  [DataType$2.OBS_EMBEDDING]: [
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.EMBEDDING_TYPE
  ],
  [DataType$2.OBS_SPOTS]: [
    CoordinationType$2.OBS_TYPE
  ],
  [DataType$2.OBS_POINTS]: [
    CoordinationType$2.OBS_TYPE
  ],
  [DataType$2.OBS_LOCATIONS]: [
    CoordinationType$2.OBS_TYPE
  ],
  [DataType$2.OBS_LABELS]: [
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE
  ],
  [DataType$2.FEATURE_LABELS]: [
    CoordinationType$2.FEATURE_TYPE
  ],
  [DataType$2.OBS_SETS]: [
    CoordinationType$2.OBS_TYPE
  ],
  [DataType$2.OBS_FEATURE_MATRIX]: [
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE
  ],
  [DataType$2.GENOMIC_PROFILES]: [],
  [DataType$2.IMAGE]: [
    CoordinationType$2.FILE_UID
  ],
  [DataType$2.NEIGHBORHOODS]: [],
  [DataType$2.SAMPLE_SETS]: [
    CoordinationType$2.SAMPLE_TYPE
  ],
  [DataType$2.SAMPLE_EDGES]: [
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE
  ],
  [DataType$2.COMPARISON_METADATA]: [
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE
  ],
  [DataType$2.FEATURE_STATS]: [
    CoordinationType$2.FEATURE_TYPE
    // TODO: should sampleType, obsSetSelection, and/or sampleSetSelection be used here?
  ],
  [DataType$2.FEATURE_SET_STATS]: [
    CoordinationType$2.FEATURE_TYPE
    // TODO: should sampleType, obsSetSelection, and/or sampleSetSelection be used here?
  ],
  [DataType$2.OBS_SET_STATS]: [
    CoordinationType$2.OBS_TYPE
    // TODO: should sampleType, obsSetSelection, and/or sampleSetSelection be used here?
  ]
});
({
  // For AnnData:
  [FileType$2.OBS_FEATURE_MATRIX_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_FEATURE_MATRIX_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_FEATURE_MATRIX_ANNDATA_H5AD
  },
  [FileType$2.OBS_FEATURE_COLUMNS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_FEATURE_COLUMNS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_FEATURE_COLUMNS_ANNDATA_H5AD
  },
  [FileType$2.OBS_SETS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_SETS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_SETS_ANNDATA_H5AD
  },
  [FileType$2.OBS_EMBEDDING_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_EMBEDDING_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_EMBEDDING_ANNDATA_H5AD
  },
  [FileType$2.OBS_SPOTS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_SPOTS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_SPOTS_ANNDATA_H5AD
  },
  [FileType$2.OBS_POINTS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_POINTS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_POINTS_ANNDATA_H5AD
  },
  [FileType$2.OBS_LOCATIONS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_LOCATIONS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_LOCATIONS_ANNDATA_H5AD
  },
  [FileType$2.OBS_SEGMENTATIONS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_SEGMENTATIONS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_SEGMENTATIONS_ANNDATA_H5AD
  },
  [FileType$2.OBS_LABELS_ANNDATA_ZARR]: {
    zip: FileType$2.OBS_LABELS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.OBS_LABELS_ANNDATA_H5AD
  },
  [FileType$2.FEATURE_LABELS_ANNDATA_ZARR]: {
    zip: FileType$2.FEATURE_LABELS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.FEATURE_LABELS_ANNDATA_H5AD
  },
  [FileType$2.SAMPLE_EDGES_ANNDATA_ZARR]: {
    zip: FileType$2.SAMPLE_EDGES_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.SAMPLE_EDGES_ANNDATA_H5AD
  },
  [FileType$2.SAMPLE_SETS_ANNDATA_ZARR]: {
    zip: FileType$2.SAMPLE_SETS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.SAMPLE_SETS_ANNDATA_H5AD
  },
  [FileType$2.COMPARISON_METADATA_ANNDATA_ZARR]: {
    zip: FileType$2.COMPARISON_METADATA_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.COMPARISON_METADATA_ANNDATA_H5AD
  },
  [FileType$2.COMPARATIVE_FEATURE_STATS_ANNDATA_ZARR]: {
    zip: FileType$2.COMPARATIVE_FEATURE_STATS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.COMPARATIVE_FEATURE_STATS_ANNDATA_H5AD
  },
  [FileType$2.COMPARATIVE_FEATURE_SET_STATS_ANNDATA_ZARR]: {
    zip: FileType$2.COMPARATIVE_FEATURE_SET_STATS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.COMPARATIVE_FEATURE_SET_STATS_ANNDATA_H5AD
  },
  [FileType$2.COMPARATIVE_OBS_SET_STATS_ANNDATA_ZARR]: {
    zip: FileType$2.COMPARATIVE_OBS_SET_STATS_ANNDATA_ZARR_ZIP,
    h5ad: FileType$2.COMPARATIVE_OBS_SET_STATS_ANNDATA_H5AD
  },
  // For OME-Zarr:
  [FileType$2.IMAGE_OME_ZARR]: {
    zip: FileType$2.IMAGE_OME_ZARR_ZIP
  },
  [FileType$2.OBS_SEGMENTATIONS_OME_ZARR]: {
    zip: FileType$2.OBS_SEGMENTATIONS_OME_ZARR_ZIP
  }
});
[
  CoordinationType$2.HEATMAP_ZOOM_X,
  CoordinationType$2.HEATMAP_ZOOM_Y,
  CoordinationType$2.HEATMAP_TARGET_X,
  CoordinationType$2.HEATMAP_TARGET_Y,
  CoordinationType$2.EMBEDDING_ZOOM,
  CoordinationType$2.EMBEDDING_TARGET_X,
  CoordinationType$2.EMBEDDING_TARGET_Y,
  CoordinationType$2.EMBEDDING_TARGET_Z,
  CoordinationType$2.EMBEDDING_OBS_SET_POLYGONS_VISIBLE,
  CoordinationType$2.EMBEDDING_OBS_SET_LABELS_VISIBLE,
  CoordinationType$2.EMBEDDING_OBS_SET_LABEL_SIZE,
  CoordinationType$2.EMBEDDING_OBS_RADIUS,
  CoordinationType$2.EMBEDDING_OBS_OPACITY,
  CoordinationType$2.SPATIAL_ZOOM,
  CoordinationType$2.SPATIAL_ROTATION,
  CoordinationType$2.SPATIAL_ROTATION_X,
  CoordinationType$2.SPATIAL_ROTATION_Y,
  CoordinationType$2.SPATIAL_ROTATION_Z,
  CoordinationType$2.SPATIAL_ROTATION_ORBIT,
  CoordinationType$2.SPATIAL_TARGET_X,
  CoordinationType$2.SPATIAL_TARGET_Y,
  CoordinationType$2.SPATIAL_TARGET_Z,
  CoordinationType$2.SPATIAL_AXIS_FIXED,
  CoordinationType$2.SPATIAL_ORBIT_AXIS,
  CoordinationType$2.FEATURE_AGGREGATION_STRATEGY
];
({
  [ViewType$2.NEUROGLANCER]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.SPATIAL_TARGET_X,
    CoordinationType$2.SPATIAL_TARGET_Y,
    CoordinationType$2.SPATIAL_TARGET_Z,
    CoordinationType$2.SPATIAL_ROTATION_X,
    CoordinationType$2.SPATIAL_ROTATION_Y,
    CoordinationType$2.SPATIAL_ROTATION_Z,
    CoordinationType$2.SPATIAL_AXIS_FIXED,
    CoordinationType$2.SPATIAL_ORBIT_AXIS,
    CoordinationType$2.SPATIAL_ZOOM,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.EMBEDDING_TYPE,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.TOOLTIPS_VISIBLE
  ],
  [ViewType$2.SCATTERPLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE,
    CoordinationType$2.EMBEDDING_TYPE,
    CoordinationType$2.EMBEDDING_ZOOM,
    CoordinationType$2.EMBEDDING_ROTATION,
    CoordinationType$2.EMBEDDING_TARGET_X,
    CoordinationType$2.EMBEDDING_TARGET_Y,
    CoordinationType$2.EMBEDDING_TARGET_Z,
    CoordinationType$2.EMBEDDING_OBS_SET_POLYGONS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABELS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABEL_SIZE,
    CoordinationType$2.EMBEDDING_OBS_RADIUS,
    CoordinationType$2.EMBEDDING_OBS_RADIUS_MODE,
    CoordinationType$2.EMBEDDING_OBS_OPACITY,
    CoordinationType$2.EMBEDDING_OBS_OPACITY_MODE,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.EMBEDDING_POINTS_VISIBLE,
    CoordinationType$2.EMBEDDING_CONTOURS_VISIBLE,
    CoordinationType$2.EMBEDDING_CONTOURS_FILLED,
    CoordinationType$2.EMBEDDING_CONTOUR_PERCENTILES,
    CoordinationType$2.CONTOUR_COLOR_ENCODING,
    CoordinationType$2.CONTOUR_COLOR
  ],
  [ViewType$2.DUAL_SCATTERPLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE,
    CoordinationType$2.EMBEDDING_TYPE,
    CoordinationType$2.EMBEDDING_ZOOM,
    CoordinationType$2.EMBEDDING_ROTATION,
    CoordinationType$2.EMBEDDING_TARGET_X,
    CoordinationType$2.EMBEDDING_TARGET_Y,
    CoordinationType$2.EMBEDDING_TARGET_Z,
    CoordinationType$2.EMBEDDING_OBS_SET_POLYGONS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABELS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABEL_SIZE,
    CoordinationType$2.EMBEDDING_OBS_RADIUS,
    CoordinationType$2.EMBEDDING_OBS_RADIUS_MODE,
    CoordinationType$2.EMBEDDING_OBS_OPACITY,
    CoordinationType$2.EMBEDDING_OBS_OPACITY_MODE,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.EMBEDDING_POINTS_VISIBLE,
    CoordinationType$2.EMBEDDING_CONTOURS_VISIBLE,
    CoordinationType$2.EMBEDDING_CONTOURS_FILLED,
    CoordinationType$2.EMBEDDING_CONTOUR_PERCENTILES,
    CoordinationType$2.CONTOUR_COLOR_ENCODING,
    CoordinationType$2.CONTOUR_COLOR
  ],
  [ViewType$2.GATING]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.EMBEDDING_TYPE,
    CoordinationType$2.EMBEDDING_ZOOM,
    CoordinationType$2.EMBEDDING_ROTATION,
    CoordinationType$2.EMBEDDING_TARGET_X,
    CoordinationType$2.EMBEDDING_TARGET_Y,
    CoordinationType$2.EMBEDDING_TARGET_Z,
    CoordinationType$2.EMBEDDING_OBS_SET_POLYGONS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABELS_VISIBLE,
    CoordinationType$2.EMBEDDING_OBS_SET_LABEL_SIZE,
    CoordinationType$2.EMBEDDING_OBS_RADIUS,
    CoordinationType$2.EMBEDDING_OBS_RADIUS_MODE,
    CoordinationType$2.EMBEDDING_OBS_OPACITY,
    CoordinationType$2.EMBEDDING_OBS_OPACITY_MODE,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM_COEFFICIENT,
    CoordinationType$2.GATING_FEATURE_SELECTION_X,
    CoordinationType$2.GATING_FEATURE_SELECTION_Y
  ],
  [ViewType$2.SPATIAL]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.SPATIAL_ZOOM,
    CoordinationType$2.SPATIAL_ROTATION,
    CoordinationType$2.SPATIAL_IMAGE_LAYER,
    CoordinationType$2.SPATIAL_SEGMENTATION_LAYER,
    CoordinationType$2.SPATIAL_POINT_LAYER,
    CoordinationType$2.SPATIAL_NEIGHBORHOOD_LAYER,
    CoordinationType$2.SPATIAL_TARGET_X,
    CoordinationType$2.SPATIAL_TARGET_Y,
    CoordinationType$2.SPATIAL_TARGET_Z,
    CoordinationType$2.SPATIAL_ROTATION_X,
    CoordinationType$2.SPATIAL_ROTATION_Y,
    CoordinationType$2.SPATIAL_ROTATION_Z,
    CoordinationType$2.SPATIAL_ROTATION_ORBIT,
    CoordinationType$2.SPATIAL_ORBIT_AXIS,
    CoordinationType$2.SPATIAL_AXIS_FIXED,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.MOLECULE_HIGHLIGHT,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.PHOTOMETRIC_INTERPRETATION
  ],
  [ViewType$2.SPATIAL_BETA]: [
    CoordinationType$2.META_COORDINATION_SCOPES,
    CoordinationType$2.META_COORDINATION_SCOPES_BY,
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.SPATIAL_ZOOM,
    CoordinationType$2.SPATIAL_ROTATION,
    CoordinationType$2.SPATIAL_POINT_LAYER,
    CoordinationType$2.SPATIAL_NEIGHBORHOOD_LAYER,
    CoordinationType$2.SPATIAL_TARGET_X,
    CoordinationType$2.SPATIAL_TARGET_Y,
    CoordinationType$2.SPATIAL_TARGET_Z,
    CoordinationType$2.SPATIAL_TARGET_T,
    CoordinationType$2.SPATIAL_ROTATION_X,
    CoordinationType$2.SPATIAL_ROTATION_Y,
    CoordinationType$2.SPATIAL_ROTATION_Z,
    CoordinationType$2.SPATIAL_ROTATION_ORBIT,
    CoordinationType$2.SPATIAL_ORBIT_AXIS,
    CoordinationType$2.SPATIAL_AXIS_FIXED,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.MOLECULE_HIGHLIGHT,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.FILE_UID,
    CoordinationType$2.SPATIAL_TARGET_C,
    CoordinationType$2.SPATIAL_LAYER_VISIBLE,
    CoordinationType$2.SPATIAL_LAYER_OPACITY,
    CoordinationType$2.SPATIAL_LAYER_COLORMAP,
    CoordinationType$2.SPATIAL_LAYER_TRANSPARENT_COLOR,
    CoordinationType$2.SPATIAL_LAYER_MODEL_MATRIX,
    CoordinationType$2.SPATIAL_CHANNEL_COLOR,
    CoordinationType$2.SPATIAL_SEGMENTATION_FILLED,
    CoordinationType$2.SPATIAL_SEGMENTATION_STROKE_WIDTH,
    CoordinationType$2.IMAGE_LAYER,
    CoordinationType$2.SEGMENTATION_LAYER,
    CoordinationType$2.IMAGE_CHANNEL,
    CoordinationType$2.SEGMENTATION_CHANNEL,
    CoordinationType$2.SPATIAL_CHANNEL_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_OPACITY,
    CoordinationType$2.SPATIAL_CHANNEL_WINDOW,
    CoordinationType$2.SPATIAL_RENDERING_MODE,
    CoordinationType$2.VOLUMETRIC_RENDERING_ALGORITHM,
    CoordinationType$2.SPATIAL_TARGET_RESOLUTION,
    CoordinationType$2.SPATIAL_SLICE_X,
    CoordinationType$2.SPATIAL_SLICE_Y,
    CoordinationType$2.SPATIAL_SLICE_Z,
    CoordinationType$2.SPOT_LAYER,
    CoordinationType$2.POINT_LAYER,
    CoordinationType$2.SPATIAL_SPOT_RADIUS,
    CoordinationType$2.SPATIAL_SPOT_FILLED,
    CoordinationType$2.SPATIAL_SPOT_STROKE_WIDTH,
    CoordinationType$2.SPATIAL_LAYER_COLOR,
    CoordinationType$2.PIXEL_HIGHLIGHT,
    CoordinationType$2.TOOLTIP_CROSSHAIRS_VISIBLE,
    CoordinationType$2.LEGEND_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_LABELS_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_LABELS_ORIENTATION,
    CoordinationType$2.SPATIAL_CHANNEL_LABEL_SIZE,
    CoordinationType$2.PHOTOMETRIC_INTERPRETATION
  ],
  [ViewType$2.HEATMAP]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_LABELS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.HEATMAP_ZOOM_X,
    CoordinationType$2.HEATMAP_ZOOM_Y,
    CoordinationType$2.HEATMAP_TARGET_X,
    CoordinationType$2.HEATMAP_TARGET_Y,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.FEATURE_FILTER,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.TOOLTIPS_VISIBLE
  ],
  [ViewType$2.OBS_SETS]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_EXPANSION,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.FEATURE_SELECTION
  ],
  [ViewType$2.OBS_SET_SIZES]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_EXPANSION,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.ADDITIONAL_OBS_SETS
  ],
  [ViewType$2.STATUS]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.MOLECULE_HIGHLIGHT
  ],
  [ViewType$2.FEATURE_LIST]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.FEATURE_FILTER,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.OBS_SET_SELECTION
  ],
  [ViewType$2.OBS_SET_FEATURE_VALUE_DISTRIBUTION]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM_COEFFICIENT,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_COLOR
  ],
  [ViewType$2.FEATURE_VALUE_HISTOGRAM]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER
  ],
  [ViewType$2.LAYER_CONTROLLER]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.SPATIAL_IMAGE_LAYER,
    CoordinationType$2.SPATIAL_SEGMENTATION_LAYER,
    CoordinationType$2.SPATIAL_POINT_LAYER,
    CoordinationType$2.SPATIAL_NEIGHBORHOOD_LAYER,
    CoordinationType$2.SPATIAL_ZOOM,
    CoordinationType$2.SPATIAL_TARGET_X,
    CoordinationType$2.SPATIAL_TARGET_Y,
    CoordinationType$2.SPATIAL_TARGET_Z,
    CoordinationType$2.SPATIAL_ROTATION_X,
    CoordinationType$2.SPATIAL_ROTATION_Y,
    CoordinationType$2.SPATIAL_ROTATION_Z,
    CoordinationType$2.SPATIAL_ROTATION_ORBIT,
    CoordinationType$2.SPATIAL_ORBIT_AXIS,
    CoordinationType$2.PHOTOMETRIC_INTERPRETATION
  ],
  [ViewType$2.LAYER_CONTROLLER_BETA]: [
    CoordinationType$2.META_COORDINATION_SCOPES,
    CoordinationType$2.META_COORDINATION_SCOPES_BY,
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.SPATIAL_POINT_LAYER,
    CoordinationType$2.SPATIAL_NEIGHBORHOOD_LAYER,
    CoordinationType$2.SPATIAL_ZOOM,
    CoordinationType$2.SPATIAL_TARGET_X,
    CoordinationType$2.SPATIAL_TARGET_Y,
    CoordinationType$2.SPATIAL_TARGET_Z,
    CoordinationType$2.SPATIAL_TARGET_T,
    CoordinationType$2.SPATIAL_ROTATION_X,
    CoordinationType$2.SPATIAL_ROTATION_Y,
    CoordinationType$2.SPATIAL_ROTATION_Z,
    CoordinationType$2.SPATIAL_ROTATION_ORBIT,
    CoordinationType$2.SPATIAL_ORBIT_AXIS,
    CoordinationType$2.FILE_UID,
    CoordinationType$2.SPATIAL_TARGET_C,
    CoordinationType$2.SPATIAL_LAYER_VISIBLE,
    CoordinationType$2.SPATIAL_LAYER_OPACITY,
    CoordinationType$2.SPATIAL_LAYER_COLORMAP,
    CoordinationType$2.SPATIAL_LAYER_TRANSPARENT_COLOR,
    CoordinationType$2.SPATIAL_LAYER_MODEL_MATRIX,
    CoordinationType$2.SPATIAL_CHANNEL_COLOR,
    CoordinationType$2.SPATIAL_SEGMENTATION_FILLED,
    CoordinationType$2.SPATIAL_SEGMENTATION_STROKE_WIDTH,
    CoordinationType$2.IMAGE_CHANNEL,
    CoordinationType$2.IMAGE_LAYER,
    CoordinationType$2.SEGMENTATION_CHANNEL,
    CoordinationType$2.SEGMENTATION_LAYER,
    CoordinationType$2.SPATIAL_CHANNEL_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_OPACITY,
    CoordinationType$2.SPATIAL_CHANNEL_WINDOW,
    CoordinationType$2.PHOTOMETRIC_INTERPRETATION,
    CoordinationType$2.SPATIAL_RENDERING_MODE,
    CoordinationType$2.VOLUMETRIC_RENDERING_ALGORITHM,
    CoordinationType$2.SPATIAL_TARGET_RESOLUTION,
    CoordinationType$2.SPATIAL_SLICE_X,
    CoordinationType$2.SPATIAL_SLICE_Y,
    CoordinationType$2.SPATIAL_SLICE_Z,
    CoordinationType$2.SPOT_LAYER,
    CoordinationType$2.POINT_LAYER,
    CoordinationType$2.SPATIAL_SPOT_RADIUS,
    CoordinationType$2.SPATIAL_SPOT_FILLED,
    CoordinationType$2.SPATIAL_SPOT_STROKE_WIDTH,
    CoordinationType$2.SPATIAL_LAYER_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.TOOLTIP_CROSSHAIRS_VISIBLE,
    CoordinationType$2.LEGEND_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_LABELS_VISIBLE,
    CoordinationType$2.SPATIAL_CHANNEL_LABELS_ORIENTATION,
    CoordinationType$2.SPATIAL_CHANNEL_LABEL_SIZE
  ],
  [ViewType$2.GENOMIC_PROFILES]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.GENOMIC_ZOOM_X,
    CoordinationType$2.GENOMIC_ZOOM_Y,
    CoordinationType$2.GENOMIC_TARGET_X,
    CoordinationType$2.GENOMIC_TARGET_Y,
    CoordinationType$2.FEATURE_FILTER,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.ADDITIONAL_OBS_SETS
  ],
  [ViewType$2.DESCRIPTION]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.SPATIAL_IMAGE_LAYER
  ],
  [ViewType$2.DOT_PLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_FILTER,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM_COEFFICIENT,
    CoordinationType$2.FEATURE_VALUE_POSITIVITY_THRESHOLD,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.SAMPLE_SET_COLOR
  ],
  higlass: [
    CoordinationType$2.DATASET,
    CoordinationType$2.GENOMIC_ZOOM_X,
    CoordinationType$2.GENOMIC_ZOOM_Y,
    CoordinationType$2.GENOMIC_TARGET_X,
    CoordinationType$2.GENOMIC_TARGET_Y,
    CoordinationType$2.FEATURE_FILTER,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION
  ],
  [ViewType$2.FEATURE_BAR_PLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM,
    CoordinationType$2.FEATURE_VALUE_TRANSFORM_COEFFICIENT,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS
  ],
  [ViewType$2.VOLCANO_PLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    // For selection of case-control sets of samples:
    CoordinationType$2.SAMPLE_SET_SELECTION,
    // For selection of one-vs-others sets of observations:
    CoordinationType$2.OBS_SET_SELECTION,
    // TODO: CoordinationType.FEATURE_SET_SELECTION,
    // TODO: CoordinationType.FEATURE_SET_HIGHLIGHT,
    // TODO: CoordinationType.FEATURE_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    // TODO: CoordinationType.FEATURE_COLOR_ENCODING,
    // TODO: CoordinationType.ADDITIONAL_FEATURE_SETS,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.FEATURE_POINT_SIGNIFICANCE_THRESHOLD,
    CoordinationType$2.FEATURE_LABEL_SIGNIFICANCE_THRESHOLD,
    CoordinationType$2.FEATURE_POINT_FOLD_CHANGE_THRESHOLD,
    CoordinationType$2.FEATURE_LABEL_FOLD_CHANGE_THRESHOLD
  ],
  [ViewType$2.FEATURE_STATS_TABLE]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    // For selection of case-control sets of samples:
    CoordinationType$2.SAMPLE_SET_SELECTION,
    // For selection of one-vs-others sets of observations:
    CoordinationType$2.OBS_SET_SELECTION,
    // TODO: CoordinationType.FEATURE_SET_SELECTION,
    // TODO: CoordinationType.FEATURE_SET_HIGHLIGHT,
    // TODO: CoordinationType.FEATURE_SET_COLOR,
    CoordinationType$2.FEATURE_HIGHLIGHT,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_VALUE_COLORMAP,
    CoordinationType$2.FEATURE_VALUE_COLORMAP_RANGE,
    // TODO: CoordinationType.FEATURE_COLOR_ENCODING,
    // TODO: CoordinationType.ADDITIONAL_FEATURE_SETS,
    CoordinationType$2.TOOLTIPS_VISIBLE,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.FEATURE_POINT_SIGNIFICANCE_THRESHOLD,
    CoordinationType$2.FEATURE_LABEL_SIGNIFICANCE_THRESHOLD,
    CoordinationType$2.FEATURE_POINT_FOLD_CHANGE_THRESHOLD,
    CoordinationType$2.FEATURE_LABEL_FOLD_CHANGE_THRESHOLD
  ],
  [ViewType$2.OBS_SET_COMPOSITION_BAR_PLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    // For selection of case-control sets of samples:
    CoordinationType$2.SAMPLE_SET_SELECTION,
    // For selection of one-vs-others sets of observations:
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.SAMPLE_SET_COLOR
  ],
  [ViewType$2.FEATURE_SET_ENRICHMENT_BAR_PLOT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    // For selection of case-control sets of samples:
    CoordinationType$2.SAMPLE_SET_SELECTION,
    // For selection of one-vs-others sets of observations:
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.FEATURE_SELECTION
  ],
  [ViewType$2.LINK_CONTROLLER]: [],
  [ViewType$2.BIOMARKER_SELECT]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER
    // TODO: create coordination types for internal state of the biomarker selection view?
  ],
  [ViewType$2.COMPARATIVE_HEADING]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.FEATURE_SELECTION,
    CoordinationType$2.FEATURE_AGGREGATION_STRATEGY,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER
  ],
  [ViewType$2.SAMPLE_SET_PAIR_MANAGER]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER
  ],
  [ViewType$2.TREEMAP]: [
    CoordinationType$2.DATASET,
    CoordinationType$2.OBS_TYPE,
    CoordinationType$2.FEATURE_TYPE,
    CoordinationType$2.FEATURE_VALUE_TYPE,
    CoordinationType$2.OBS_FILTER,
    CoordinationType$2.OBS_HIGHLIGHT,
    CoordinationType$2.OBS_SET_SELECTION,
    CoordinationType$2.OBS_SET_FILTER,
    CoordinationType$2.OBS_SELECTION,
    CoordinationType$2.OBS_SELECTION_MODE,
    CoordinationType$2.OBS_SET_HIGHLIGHT,
    CoordinationType$2.OBS_SET_COLOR,
    CoordinationType$2.OBS_COLOR_ENCODING,
    CoordinationType$2.ADDITIONAL_OBS_SETS,
    CoordinationType$2.SAMPLE_TYPE,
    CoordinationType$2.SAMPLE_SET_SELECTION,
    CoordinationType$2.SAMPLE_SET_FILTER,
    CoordinationType$2.SAMPLE_SET_COLOR,
    CoordinationType$2.SAMPLE_SELECTION,
    CoordinationType$2.SAMPLE_SELECTION_MODE,
    CoordinationType$2.SAMPLE_FILTER,
    CoordinationType$2.SAMPLE_FILTER_MODE,
    CoordinationType$2.SAMPLE_HIGHLIGHT,
    CoordinationType$2.HIERARCHY_LEVELS
  ]
});
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
var loglevel$1 = { exports: {} };
var loglevel = loglevel$1.exports;
var hasRequiredLoglevel;
function requireLoglevel() {
  if (hasRequiredLoglevel) return loglevel$1.exports;
  hasRequiredLoglevel = 1;
  (function(module) {
    (function(root, definition) {
      if (module.exports) {
        module.exports = definition();
      } else {
        root.log = definition();
      }
    })(loglevel, function() {
      var noop = function() {
      };
      var undefinedType = "undefined";
      var isIE = typeof window !== undefinedType && typeof window.navigator !== undefinedType && /Trident\/|MSIE /.test(window.navigator.userAgent);
      var logMethods = [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
      ];
      var _loggersByName = {};
      var defaultLogger = null;
      function bindMethod(obj, methodName) {
        var method = obj[methodName];
        if (typeof method.bind === "function") {
          return method.bind(obj);
        } else {
          try {
            return Function.prototype.bind.call(method, obj);
          } catch (e) {
            return function() {
              return Function.prototype.apply.apply(method, [obj, arguments]);
            };
          }
        }
      }
      function traceForIE() {
        if (console.log) {
          if (console.log.apply) {
            console.log.apply(console, arguments);
          } else {
            Function.prototype.apply.apply(console.log, [console, arguments]);
          }
        }
        if (console.trace) console.trace();
      }
      function realMethod(methodName) {
        if (methodName === "debug") {
          methodName = "log";
        }
        if (typeof console === undefinedType) {
          return false;
        } else if (methodName === "trace" && isIE) {
          return traceForIE;
        } else if (console[methodName] !== void 0) {
          return bindMethod(console, methodName);
        } else if (console.log !== void 0) {
          return bindMethod(console, "log");
        } else {
          return noop;
        }
      }
      function replaceLoggingMethods() {
        var level = this.getLevel();
        for (var i = 0; i < logMethods.length; i++) {
          var methodName = logMethods[i];
          this[methodName] = i < level ? noop : this.methodFactory(methodName, level, this.name);
        }
        this.log = this.debug;
        if (typeof console === undefinedType && level < this.levels.SILENT) {
          return "No console available for logging";
        }
      }
      function enableLoggingWhenConsoleArrives(methodName) {
        return function() {
          if (typeof console !== undefinedType) {
            replaceLoggingMethods.call(this);
            this[methodName].apply(this, arguments);
          }
        };
      }
      function defaultMethodFactory(methodName, _level, _loggerName) {
        return realMethod(methodName) || enableLoggingWhenConsoleArrives.apply(this, arguments);
      }
      function Logger(name, factory) {
        var self = this;
        var inheritedLevel;
        var defaultLevel;
        var userLevel;
        var storageKey = "loglevel";
        if (typeof name === "string") {
          storageKey += ":" + name;
        } else if (typeof name === "symbol") {
          storageKey = void 0;
        }
        function persistLevelIfPossible(levelNum) {
          var levelName = (logMethods[levelNum] || "silent").toUpperCase();
          if (typeof window === undefinedType || !storageKey) return;
          try {
            window.localStorage[storageKey] = levelName;
            return;
          } catch (ignore) {
          }
          try {
            window.document.cookie = encodeURIComponent(storageKey) + "=" + levelName + ";";
          } catch (ignore) {
          }
        }
        function getPersistedLevel() {
          var storedLevel;
          if (typeof window === undefinedType || !storageKey) return;
          try {
            storedLevel = window.localStorage[storageKey];
          } catch (ignore) {
          }
          if (typeof storedLevel === undefinedType) {
            try {
              var cookie = window.document.cookie;
              var cookieName = encodeURIComponent(storageKey);
              var location = cookie.indexOf(cookieName + "=");
              if (location !== -1) {
                storedLevel = /^([^;]+)/.exec(
                  cookie.slice(location + cookieName.length + 1)
                )[1];
              }
            } catch (ignore) {
            }
          }
          if (self.levels[storedLevel] === void 0) {
            storedLevel = void 0;
          }
          return storedLevel;
        }
        function clearPersistedLevel() {
          if (typeof window === undefinedType || !storageKey) return;
          try {
            window.localStorage.removeItem(storageKey);
          } catch (ignore) {
          }
          try {
            window.document.cookie = encodeURIComponent(storageKey) + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC";
          } catch (ignore) {
          }
        }
        function normalizeLevel(input) {
          var level = input;
          if (typeof level === "string" && self.levels[level.toUpperCase()] !== void 0) {
            level = self.levels[level.toUpperCase()];
          }
          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
            return level;
          } else {
            throw new TypeError("log.setLevel() called with invalid level: " + input);
          }
        }
        self.name = name;
        self.levels = {
          "TRACE": 0,
          "DEBUG": 1,
          "INFO": 2,
          "WARN": 3,
          "ERROR": 4,
          "SILENT": 5
        };
        self.methodFactory = factory || defaultMethodFactory;
        self.getLevel = function() {
          if (userLevel != null) {
            return userLevel;
          } else if (defaultLevel != null) {
            return defaultLevel;
          } else {
            return inheritedLevel;
          }
        };
        self.setLevel = function(level, persist) {
          userLevel = normalizeLevel(level);
          if (persist !== false) {
            persistLevelIfPossible(userLevel);
          }
          return replaceLoggingMethods.call(self);
        };
        self.setDefaultLevel = function(level) {
          defaultLevel = normalizeLevel(level);
          if (!getPersistedLevel()) {
            self.setLevel(level, false);
          }
        };
        self.resetLevel = function() {
          userLevel = null;
          clearPersistedLevel();
          replaceLoggingMethods.call(self);
        };
        self.enableAll = function(persist) {
          self.setLevel(self.levels.TRACE, persist);
        };
        self.disableAll = function(persist) {
          self.setLevel(self.levels.SILENT, persist);
        };
        self.rebuild = function() {
          if (defaultLogger !== self) {
            inheritedLevel = normalizeLevel(defaultLogger.getLevel());
          }
          replaceLoggingMethods.call(self);
          if (defaultLogger === self) {
            for (var childName in _loggersByName) {
              _loggersByName[childName].rebuild();
            }
          }
        };
        inheritedLevel = normalizeLevel(
          defaultLogger ? defaultLogger.getLevel() : "WARN"
        );
        var initialLevel = getPersistedLevel();
        if (initialLevel != null) {
          userLevel = normalizeLevel(initialLevel);
        }
        replaceLoggingMethods.call(self);
      }
      defaultLogger = new Logger();
      defaultLogger.getLogger = function getLogger(name) {
        if (typeof name !== "symbol" && typeof name !== "string" || name === "") {
          throw new TypeError("You must supply a name when creating a logger.");
        }
        var logger = _loggersByName[name];
        if (!logger) {
          logger = _loggersByName[name] = new Logger(
            name,
            defaultLogger.methodFactory
          );
        }
        return logger;
      };
      var _log = typeof window !== undefinedType ? window.log : void 0;
      defaultLogger.noConflict = function() {
        if (typeof window !== undefinedType && window.log === defaultLogger) {
          window.log = _log;
        }
        return defaultLogger;
      };
      defaultLogger.getLoggers = function getLoggers() {
        return _loggersByName;
      };
      defaultLogger["default"] = defaultLogger;
      return defaultLogger;
    });
  })(loglevel$1);
  return loglevel$1.exports;
}
var loglevelExports = requireLoglevel();
const log = /* @__PURE__ */ getDefaultExportFromCjs(loglevelExports);
const ViewType$1 = {
  GENES: [
    "genes",
    "This view type was renamed to featureList in schema version 1.0.15."
  ],
  CELL_SETS: [
    "cellSets",
    "This view type was renamed to obsSets in schema version 1.0.15."
  ],
  CELL_SET_SIZES: [
    "cellSetSizes",
    "This view type was renamed to obsSetSizes in schema version 1.0.15."
  ],
  CELL_SET_EXPRESSION: [
    "cellSetExpression",
    "This view type was renamed to obsSetFeatureValueDistribution in schema version 1.0.15."
  ],
  EXPRESSION_HISTOGRAM: [
    "expressionHistogram",
    "This view type was renamed to featureValueHistogram in schema version 1.0.15."
  ]
};
const DataType$1 = {
  CELLS: [
    "cells",
    "This data type was removed. Associated file types were re-implemented as joint file types. See obsEmbedding instead."
  ],
  CELL_SETS: [
    "cell-sets",
    "This data type was removed. Associated file types were re-implemented as joint file types. See obsSets instead."
  ],
  EXPRESSION_MATRIX: [
    "expression-matrix",
    "This data type was removed. Associated file types were re-implemented as joint file types. See obsFeatureMatrix instead."
  ],
  MOLECULES: [
    "molecules",
    "This data type was removed. Associated file types were re-implemented as joint file types. See obsLocations instead."
  ],
  RASTER: [
    "raster",
    "This data type was removed. Associated file types were re-implemented as joint file types. See image and obsSegmentations instead."
  ]
};
const FileType$1 = {};
function makeChangeMessage(newTypeName, newVersion) {
  return [
    `This coordination type was changed to ${newTypeName} in view config schema version ${newVersion}`,
    newVersion,
    newTypeName
  ];
}
const CoordinationType$1 = {
  SPATIAL_LAYERS: [
    "spatialLayers",
    "This coordination type was split into multiple coordination types in view config schema version 1.0.1",
    "1.0.1",
    "multiple"
    // Not used for spatialLayers (since it was split into multiple).
  ],
  // Spatial layers
  SPATIAL_RASTER_LAYERS: [
    "spatialRasterLayers",
    ...makeChangeMessage("spatialImageLayer", "1.0.11")
  ],
  SPATIAL_CELLS_LAYER: [
    "spatialCellsLayer",
    ...makeChangeMessage("spatialSegmentationLayer", "1.0.11")
  ],
  SPATIAL_MOLECULES_LAYER: [
    "spatialMoleculesLayer",
    ...makeChangeMessage("spatialPointLayer", "1.0.11")
  ],
  SPATIAL_NEIGHBORHOODS_LAYER: [
    "spatialNeighborhoodsLayer",
    ...makeChangeMessage("spatialNeighborhoodLayer", "1.0.11")
  ],
  // Cell -> Obs
  EMBEDDING_CELL_SET_POLYGONS_VISIBLE: [
    "embeddingCellSetPolygonsVisible",
    ...makeChangeMessage("embeddingObsSetPolygonsVisible", "1.0.11")
  ],
  EMBEDDING_CELL_SET_LABELS_VISIBLE: [
    "embeddingCellSetLabelsVisible",
    ...makeChangeMessage("embeddingObsSetLabelsVisible", "1.0.11")
  ],
  EMBEDDING_CELL_SET_LABEL_SIZE: [
    "embeddingCellSetLabelSize",
    ...makeChangeMessage("embeddingObsSetLabelSize", "1.0.11")
  ],
  EMBEDDING_CELL_RADIUS: [
    "embeddingCellRadius",
    ...makeChangeMessage("embeddingObsRadius", "1.0.11")
  ],
  EMBEDDING_CELL_RADIUS_MODE: [
    "embeddingCellRadiusMode",
    ...makeChangeMessage("embeddingObsRadiusMode", "1.0.11")
  ],
  EMBEDDING_CELL_OPACITY: [
    "embeddingCellOpacity",
    ...makeChangeMessage("embeddingObsOpacity", "1.0.11")
  ],
  EMBEDDING_CELL_OPACITY_MODE: [
    "embeddingCellOpacityMode",
    ...makeChangeMessage("embeddingObsOpacityMode", "1.0.11")
  ],
  CELL_FILTER: [
    "cellFilter",
    ...makeChangeMessage("obsFilter", "1.0.11")
  ],
  CELL_HIGHLIGHT: [
    "cellHighlight",
    ...makeChangeMessage("obsHighlight", "1.0.11")
  ],
  CELL_SET_SELECTION: [
    "cellSetSelection",
    ...makeChangeMessage("obsSetSelection", "1.0.11")
  ],
  CELL_SET_HIGHLIGHT: [
    "cellSetHighlight",
    ...makeChangeMessage("obsSetHighlight", "1.0.11")
  ],
  CELL_SET_COLOR: [
    "cellSetColor",
    ...makeChangeMessage("obsSetColor", "1.0.11")
  ],
  CELL_COLOR_ENCODING: [
    "cellColorEncoding",
    ...makeChangeMessage("obsColorEncoding", "1.0.11")
  ],
  ADDITIONAL_CELL_SETS: [
    "additionalCellSets",
    ...makeChangeMessage("additionalObsSets", "1.0.11")
  ],
  // Gene -> Feature
  GENE_FILTER: [
    "geneFilter",
    ...makeChangeMessage("featureFilter", "1.0.11")
  ],
  GENE_HIGHLIGHT: [
    "geneHighlight",
    ...makeChangeMessage("featureHighlight", "1.0.11")
  ],
  GENE_SELECTION: [
    "geneSelection",
    ...makeChangeMessage("featureSelection", "1.0.11")
  ],
  GENE_EXPRESSION_COLORMAP: [
    "geneExpressionColormap",
    ...makeChangeMessage("featureValueColormap", "1.0.11")
  ],
  GENE_EXPRESSION_TRANSFORM: [
    "geneExpressionTransform",
    ...makeChangeMessage("featureValueTransform", "1.0.11")
  ],
  GENE_EXPRESSION_COLORMAP_RANGE: [
    "geneExpressionColormapRange",
    ...makeChangeMessage("featureValueColormapRange", "1.0.11")
  ]
};
function makeConstantWithDeprecationMessage(currObj, oldObj) {
  const handler = {
    get(obj, prop) {
      const oldKeys = Object.keys(oldObj);
      const propKey = String(prop);
      if (oldKeys.includes(propKey)) {
        log.warn(`Notice about the constant mapping ${propKey}: '${oldObj[propKey][0]}':
${oldObj[propKey][1]}`);
        return oldObj[propKey];
      }
      return obj[prop];
    }
  };
  const objWithMessage = new Proxy(currObj, handler);
  return objWithMessage;
}
const ViewType = makeConstantWithDeprecationMessage(
  ViewType$2,
  ViewType$1
);
const DataType = makeConstantWithDeprecationMessage(
  DataType$2,
  DataType$1
);
const FileType = makeConstantWithDeprecationMessage(
  FileType$2,
  FileType$1
);
const CoordinationType = makeConstantWithDeprecationMessage(
  CoordinationType$2,
  CoordinationType$1
);
export {
  CoordinationType,
  DataType,
  FileType,
  CoordinationType$1 as OldCoordinationType,
  ViewType
};
