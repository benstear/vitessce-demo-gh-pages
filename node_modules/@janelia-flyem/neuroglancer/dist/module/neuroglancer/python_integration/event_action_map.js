import _slicedToArray from 'babel-runtime/helpers/slicedToArray';
import _Object$keys from 'babel-runtime/core-js/object/keys';
/**
 * @license
 * Copyright 2017 Google Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @file Facility for updating an EventActionMap based on a JSON representation.
 */
import { verifyObject, verifyString } from '../util/json';
import { NullarySignal } from '../util/signal';
import { EventActionMap } from '../util/event_action_map';
export class TrackableBasedEventActionMap {
    constructor() {
        this.eventActionMap = new EventActionMap();
        this.changed = new NullarySignal();
    }
    reset() {
        this.eventActionMap.clear();
        this.changed.dispatch();
    }
    restoreState(obj) {
        verifyObject(obj);
        const eventActionMap = this.eventActionMap;

        for (const key of _Object$keys(obj)) {
            const action = verifyString(obj[key]);
            eventActionMap.set(key, action);
        }
        this.changed.dispatch();
    }
    toJSON() {
        const result = {};
        for (const _ref of this.eventActionMap.bindings) {
            var _ref2 = _slicedToArray(_ref, 2);

            const key = _ref2[0];
            const eventAction = _ref2[1];

            result[key] = eventAction.action;
        }
        return result;
    }
}
//# sourceMappingURL=event_action_map.js.map