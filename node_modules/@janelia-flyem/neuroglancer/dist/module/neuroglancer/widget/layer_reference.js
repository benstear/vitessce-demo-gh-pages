/**
 * @license
 * Copyright 2018 Google Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import debounce from 'lodash/debounce';
import { RefCounted } from '../util/disposable';
import { removeChildren } from '../util/dom';
export class LayerReferenceWidget extends RefCounted {
    constructor(ref) {
        super();
        this.ref = ref;
        this.element = document.createElement('label');
        this.selectElement = document.createElement('select');
        this.registerDisposer(ref);
        const element = this.element,
              selectElement = this.selectElement;

        element.appendChild(selectElement);
        this.updateView();
        this.registerEventListener(selectElement, 'change', () => this.updateModel());
        this.registerDisposer(this.ref.changed.add(debounce(() => this.updateView(), 0)));
    }
    updateModel() {
        this.ref.layerName = this.selectElement.value || undefined;
    }
    updateView() {
        const selectElement = this.selectElement,
              ref = this.ref;
        const filter = ref.filter;

        removeChildren(selectElement);
        const emptyOption = document.createElement('option');
        selectElement.appendChild(emptyOption);
        for (const layer of this.ref.layerManager.managedLayers) {
            if (filter(layer)) {
                const option = document.createElement('option');
                const name = layer.name;

                option.textContent = name;
                option.value = name;
                selectElement.appendChild(option);
            }
        }
        selectElement.value = ref.layerName || '';
    }
}
//# sourceMappingURL=layer_reference.js.map