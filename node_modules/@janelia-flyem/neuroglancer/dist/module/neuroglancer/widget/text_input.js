/**
 * @license
 * Copyright 2020 Google Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { RefCounted } from '../util/disposable';
import { removeFromParent } from '../util/dom';
export class TextInputWidget extends RefCounted {
    constructor(model) {
        super();
        this.model = model;
        this.element = document.createElement('input');
        this.registerDisposer(model.changed.add(() => this.updateView()));
        const element = this.element;

        element.type = 'text';
        this.registerEventListener(element, 'change', () => this.updateModel());
        this.updateView();
    }
    disposed() {
        removeFromParent(this.element);
    }
    updateView() {
        var _a;
        this.element.value = ((_a = this.model.value) !== null && _a !== void 0 ? _a : '') + '';
    }
    updateModel() {
        try {
            this.model.restoreState(this.element.value);
        } catch (_a) {}
        this.updateView();
    }
}
//# sourceMappingURL=text_input.js.map