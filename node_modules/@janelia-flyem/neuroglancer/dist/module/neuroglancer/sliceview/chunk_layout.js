/**
 * @license
 * Copyright 2016 Google Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { mat4, transformVectorByMat4, transformVectorByMat4Transpose, vec3 } from '../util/geom';
import * as matrix from '../util/matrix';
export class ChunkLayout {
    constructor(size, transform, finiteRank) {
        this.size = vec3.clone(size);
        this.transform = mat4.clone(transform);
        this.finiteRank = finiteRank;
        const invTransform = mat4.create();
        const det = matrix.inverse(invTransform, 4, transform, 4, 4);
        if (det === 0) {
            throw new Error('Transform is singular');
        }
        this.invTransform = invTransform;
        this.detTransform = det;
    }
    toObject() {
        return { size: this.size, transform: this.transform, finiteRank: this.finiteRank };
    }
    static fromObject(msg) {
        return new ChunkLayout(msg.size, msg.transform, msg.finiteRank);
    }
    /**
     * Transform global spatial coordinates to local spatial coordinates.
     */
    globalToLocalSpatial(out, globalSpatial) {
        return vec3.transformMat4(out, globalSpatial, this.invTransform);
    }
    localSpatialVectorToGlobal(out, localVector) {
        return transformVectorByMat4(out, localVector, this.transform);
    }
    /**
     * Returns the unnormalized normal vector.
     */
    globalToLocalNormal(globalNormal, localNormal) {
        return transformVectorByMat4Transpose(globalNormal, localNormal, this.transform);
    }
}
//# sourceMappingURL=chunk_layout.js.map