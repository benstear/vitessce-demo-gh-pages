import type { Reader } from "unzipit";
import type { AbsolutePath, AsyncReadable } from "./types.js";
export declare class BlobReader implements Reader {
    blob: Blob;
    constructor(blob: Blob);
    getLength(): Promise<number>;
    read(offset: number, length: number): Promise<Uint8Array>;
}
interface ZipFileStoreOptions {
    overrides?: RequestInit;
}
export declare class HTTPRangeReader implements Reader {
    #private;
    url: string | URL;
    private length?;
    constructor(url: string | URL, opts?: ZipFileStoreOptions);
    getLength(): Promise<number>;
    read(offset: number, size: number): Promise<Uint8Array>;
}
/** @experimental */
declare class ZipFileStore<R extends Reader = Reader> implements AsyncReadable {
    private info;
    constructor(reader: R);
    get(key: AbsolutePath): Promise<Uint8Array | undefined>;
    has(key: AbsolutePath): Promise<boolean>;
    static fromUrl(href: string | URL, opts?: ZipFileStoreOptions): ZipFileStore<HTTPRangeReader>;
    static fromBlob(blob: Blob): ZipFileStore<BlobReader>;
}
export default ZipFileStore;
